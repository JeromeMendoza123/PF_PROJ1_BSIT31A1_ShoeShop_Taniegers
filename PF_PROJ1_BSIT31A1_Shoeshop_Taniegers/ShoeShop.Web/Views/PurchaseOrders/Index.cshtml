@model IEnumerable<ShoeShop.Services.DTOs.PurchaseOrderDto>
@{
    ViewData["Title"] = "Purchase Orders";
}

<div class="container-fluid p-4">
    <h2>Purchase Orders</h2>
    <button class="btn btn-success mb-3" onclick="openOrderModal()">+ Add Order</button>

    <table id="ordersTable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>#</th>
                <th>Customer Name</th>
                <th>Total</th>
                <th>Notes</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model)
            {
                <tr>
                    <td>@order.Id</td>
                    <td>@order.CustomerName</td>
                    <td>@order.Total</td>
                    <td>@order.Notes</td>
                    <td>
                        <button class="btn btn-primary btn-sm" onclick="openEditOrder(@order.Id)">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="confirmDeleteOrder(@order.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Purchase Order Modal Partial -->
@await Html.PartialAsync("_PurchaseOrderModal", model: null, viewData: new ViewDataDictionary(ViewData)
{
    { "ModalId", "purchaseOrderModal" },
    { "FormId", "purchaseOrderForm" },
    { "ModalTitle", "Add/Edit Purchase Order" },
    { "SubmitButtonText", "Save" },
    { "FormContent", @"
        <div class='mb-3'>
            <label>Customer Name</label>
            <input type='text' class='form-control' name='CustomerName' required />
        </div>
        <div class='mb-3'>
            <label>Total</label>
            <input type='number' class='form-control' name='Total' required />
        </div>
        <div class='mb-3'>
            <label>Notes</label>
            <textarea class='form-control' name='Notes'></textarea>
        </div>
        <input type='hidden' name='Id' />
    "}
})

@section Scripts {
    <script>
        const orderModalEl = document.getElementById('purchaseOrderModal');
        const orderModal = orderModalEl ? new bootstrap.Modal(orderModalEl) : null;

        // Open Add Order Modal
        window.openOrderModal = function() {
            $('#purchaseOrderForm')[0].reset();
            $('#purchaseOrderForm [name="Id"]').val('');
            $('#purchaseOrderForm').data('action', '/PurchaseOrders/Create');
            if (orderModal) orderModal.show();
        }

        // Open Edit Order Modal
        window.openEditOrder = function(id) {
            $.get('/PurchaseOrders/GetOrder?id=' + id, function(data) {
                if (!data.success) {
                    alert(data.message);
                    return;
                }

                $('#purchaseOrderForm [name="Id"]').val(data.id);
                $('#purchaseOrderForm [name="CustomerName"]').val(data.customerName);
                $('#purchaseOrderForm [name="Total"]').val(data.total);
                $('#purchaseOrderForm [name="Notes"]').val(data.notes);
                $('#purchaseOrderForm').data('action', '/PurchaseOrders/Edit');

                if (orderModal) orderModal.show();
            });
        }

        // Submit Form (Add/Edit)
        window.submitOrderForm = function() {
            const form = $('#purchaseOrderForm')[0];
            const formData = $(form).serialize();
            const action = $('#purchaseOrderForm').data('action');

            $.post(action, formData, function(response) {
                if (orderModal) orderModal.hide();
                alert(response.message);

                if (response.success) {
                    refreshOrdersTable();
                }
            });
        }

        // Confirm Delete
        window.confirmDeleteOrder = function(id) {
            if (!confirm("Are you sure you want to delete this order?")) return;

            $.post('/PurchaseOrders/Delete', { id: id }, function(response) {
                alert(response.message);
                if (response.success) refreshOrdersTable();
            });
        }

        // Refresh Table
        function refreshOrdersTable() {
            $.get('/PurchaseOrders', function(html) {
                const newTbody = $(html).find('#ordersTable tbody').html();
                $('#ordersTable tbody').html(newTbody);

                // Reinitialize DataTable
                if ($.fn.DataTable.isDataTable('#ordersTable')) {
                    $('#ordersTable').DataTable().destroy();
                }
                $('#ordersTable').DataTable({
                    paging: true,
                    searching: true,
                    ordering: true,
                    info: true,
                    autoWidth: false,
                    columnDefs: [{ orderable: false, targets: -1 }]
                });
            });
        }

        // Initialize DataTable on first load
        $(document).ready(function() {
            $('#ordersTable').DataTable({
                paging: true,
                searching: true,
                ordering: true,
                info: true,
                autoWidth: false,
                columnDefs: [{ orderable: false, targets: -1 }]
            });
        });
    </script>
}
